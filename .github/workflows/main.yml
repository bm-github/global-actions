name: Generate README with AI

on:
  push:
    branches: [main]
    paths-ignore: ['**/README.md']
  workflow_dispatch:

jobs:
  generate-readme:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies and check versions
        run: |
          pip install --upgrade pip anthropic openai
          python -c "import anthropic, openai; print(f'Anthropic: {anthropic.__version__}, OpenAI: {openai.__version__}')"

      - name: Get changed files
        id: changed-files
        run: |
          FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
          echo "files=${FILES}" >> $GITHUB_OUTPUT

      - name: Generate README
        id: generate-readme
        run: |
          CONDITION=""
          for i in {1..10}; do
            VAR_NAME="TRIGGER_FILE_TYPE_$i"
            if [[ -n "${{ vars[VAR_NAME] }}" ]]; then
              if [[ -n "$CONDITION" ]]; then CONDITION+=" || "; fi
              CONDITION+="contains(steps.changed-files.outputs.files, '${{ vars[VAR_NAME] }}')"
            fi
          done
          if [[ -z "$CONDITION" ]]; then
            echo "No trigger file types defined. Skipping README generation."
            exit 0
          fi
          if eval "$CONDITION"; then
            python .github/scripts/generate_readme.py
            echo "readme_generated=true" >> $GITHUB_OUTPUT
          else
            echo "No matching file types found. Skipping README generation."
          fi
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          AI_PROVIDER: ${{ vars.AI_PROVIDER }}
          AI_MODEL: ${{ vars.AI_MODEL }}
          FILE_TYPES: ${{ vars.FILE_TYPES }}

      - name: Commit and push README if changed
        if: steps.generate-readme.outputs.readme_generated == 'true'
        run: |
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
          git add README.md
          git diff --quiet && git diff --staged --quiet || (git commit -m "Update README.md" && git push)